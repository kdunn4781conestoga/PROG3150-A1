package ca.kdunn4781.assignment1;import androidx.appcompat.app.AppCompatActivity;import androidx.databinding.DataBindingUtil;import androidx.lifecycle.Observer;import androidx.lifecycle.ViewModelProvider;import android.app.DatePickerDialog;import android.os.Bundle;import android.view.View;import android.widget.ArrayAdapter;import android.widget.Button;import android.widget.DatePicker;import android.widget.Spinner;import android.widget.TextView;import ca.kdunn4781.assignment1.databinding.ActivityMainBinding;import ca.kdunn4781.assignment1.databinding.PeopleCountBinding;import ca.kdunn4781.assignment1.location.Location;import ca.kdunn4781.assignment1.location.LocationActivity;import ca.kdunn4781.assignment1.location.LocationViewModel;import ca.kdunn4781.assignment1.travel.Trip;import ca.kdunn4781.assignment1.travel.TripViewModel;import android.content.Intent;import java.util.Calendar;import java.util.List;public class MainActivity extends AppCompatActivity {    //private ActivityMainBinding binding;    private TripViewModel tripViewModel;    private LocationViewModel locationViewModel;    private ArrayAdapter<Location> adapter;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        setTitle(R.string.main_activity);        ActivityMainBinding binding                = DataBindingUtil.setContentView(this, R.layout.activity_main);        locationViewModel = new ViewModelProvider(this).get(LocationViewModel.class);                adapter = new ArrayAdapter<>(MainActivity.this, android.R.layout.simple_spinner_item);        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);        binding.fromLocationSpinner.setAdapter(adapter);        binding.toLocationSpinner.setAdapter(adapter);        Button back = binding.backBtn;        back.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent wc = new Intent(MainActivity.this,WelcomeScreen.class);                startActivity(wc);            }        });        locationViewModel.getLocationListLiveData().observe(this, new Observer<List<Location>>() {            @Override            public void onChanged(List<Location> locations) {                if (locations != null && !locations.isEmpty()) { // database items                    adapter.clear();                    adapter.addAll(locations);                }            }        });        // TODO load from json server        locationViewModel.populateInitialLocations(getResources().getStringArray(R.array.locations));        tripViewModel = new ViewModelProvider(this).get(TripViewModel.class);        tripViewModel.getTripLiveData().observe(this, new Observer<Trip>() {            @Override            public void onChanged(Trip travel) {                if (travel != null) {                    // TODO switch to navigating using menus                    Intent intent = new Intent(MainActivity.this, LocationActivity.class);                    intent.putExtra("tripId", travel.id);                    startActivity(intent);                }            }        });        // better implementation of adding click events for the counters        assignCounters(binding.adultCount);        assignCounters(binding.childrenCount);        binding.startDatePicker.btnPickDate.setOnClickListener(new View.OnClickListener(){            @Override            public void onClick(View v) {                setDate(binding.startDatePicker.lblDate);            }        });        binding.nextBtn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                tripViewModel.createTravel(                        "My Travel",                        null,                        Integer.parseInt(binding.adultCount.howManyTv.getText().toString()),                        Integer.parseInt(binding.childrenCount.howManyTv.getText().toString()),                        adapter.getItem(binding.fromLocationSpinner.getSelectedItemPosition()),                        adapter.getItem(binding.toLocationSpinner.getSelectedItemPosition())                );            }        });    }    private void setDate(TextView x) {        Calendar calender = Calendar.getInstance();        int year = calender.get(Calendar.YEAR);        int month = calender.get(Calendar.MONTH);        int date = calender.get(Calendar.DATE);        DatePickerDialog datePickerDialog = new DatePickerDialog(this, new DatePickerDialog.OnDateSetListener() {            @Override            public void onDateSet(DatePicker view, int year, int month, int date) {                String str = year + "/" + month + "/" + date;                x.setText(str);            }        }, year, month, date);        datePickerDialog.show();    }    public void assignCounters(PeopleCountBinding peopleCountBinding) {        peopleCountBinding.plusBtn.setOnClickListener(v -> {            String s = peopleCountBinding.howManyTv.getText().toString();            int  num = Integer.valueOf(s);            num = num + 1;            String s1= String.valueOf(num);            peopleCountBinding.howManyTv.setText(s1);        });        peopleCountBinding.minusBtn.setOnClickListener(v -> {            String s = peopleCountBinding.howManyTv.getText().toString();            int  num = Integer.valueOf(s);            if(num > 0) {                num = num - 1;            }            String s1= String.valueOf(num);            peopleCountBinding.howManyTv.setText(s1);        });    }    public void onCheckboxClicked(View view) {    }//        next.setOnClickListener(v -> {//            // get the value which input by user in EditText and convert it to string//            String str = howMany.getText().toString();//            // Create the Intent object of this class Context() to Second_activity class//            Intent intent = new Intent(getApplicationContext(), SecondActivity.class);//            // now by putExtra method put the value in key, value pair key is//            // message_key by this key we will receive the value, and put the string//            intent.putExtra("message_key", str);//            // start the Intent//            startActivity(intent);//        });}